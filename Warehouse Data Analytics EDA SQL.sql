-- Explore All Objects in the Databases
SELECT * FROM INFORMATION_SCHEMA.TABLES

-- Explore All columns in the database
Select * from INFORMATION_SCHEMA.COLUMNS
Where TABLE_NAME = 'dim_customers'

-- DIMESION EXPLORATION --

-- Explore All countries our customers come from
Select Distinct country from gold.dim_customers

-- Explore All Product Categories "The Major Divisions"
Select distinct category , subcategory , product_name from gold.dim_products
order by 1,2,3

-- DATE EXPLORATION --

-- Find  the date of the first and last order
Select 
MIN(order_date) As first_order_date,
Max(order_date) As Lats_order_date,
DATEDIFF(month, MIN(order_date), MAX(order_date)) As order_range_years
From gold.fact_sales

-- Find the Youngest and Oldest Customer
select 
MIN(birthdate) AS oldest_birthdate,
DATEDIFF(YEAR, MIN(birthdate), GETDATE()) AS oldest_age,
MAX(birthdate) AS youngest_birthdate,
DATEDIFF(YEAR, MAX(birthdate), GETDATE()) AS youngest_age
from gold.dim_customers

-- MEASURE EXPLORATION --

-- Find the total Sales
SELECT SUM(sales_amount) As total_sales from gold.fact_sales

-- finfd howmany items are sold
SELECT SUM(quantity) as total_quantity FROM gold.fact_sales

-- Find the Average Selling Price
SELECT Avg(Price) as Avg_price FROM gold.fact_sales

-- Find the Totalnumber of Orders
SELECT count(order_number) as total_orders FROM gold.fact_sales
SELECT count(Distinct order_number) as total_orders FROM gold.fact_sales


-- Find the total number of products
SELECT COUNT(product_name) AS total_products FROM gold.dim_products
SELECT COUNT(distinct product_name) AS total_products FROM gold.dim_products

-- Find the total number of customers
SELECT COUNT(customer_key) AS total_customers FROM gold.dim_customers

-- Find the total number of customers that has placed an order
SELECT COUNT(distinct customer_key) AS total_customers FROM gold.fact_sales

-- GENERATE A REPORT THAT SHOWS ALL KEY METRICS OF THE BUSINESS --
SELECT 'Total Sales' as Measure_name, SUM(sales_amount) AS Measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Quantity' , SUM(quantity) FROM gold.fact_sales
UNION ALL
SELECT 'Average Price' , AVG(Price) from gold.fact_sales
UNION ALL
SELECT  'Toatl Nr. Orders' , COUNT(distinct order_number) from gold.fact_sales
UNION ALL
SELECT  'Toatl Nr. Products' , COUNT(distinct product_name) from gold.dim_products
UNION ALL
SELECT  'Toatl Nr. Customers' , COUNT(distinct customer_key) from gold.dim_customers

-- MAGNITUDE ANALYSIS --

-- Find the total customersby countries
SELECT
country, COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY country
ORDER by total_customers DESC

-- Find the total customers by gender
SELECT
gender, COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER by total_customers DESC

-- find total products by category
select
category, COUNT(product_key) AS total_products
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC

-- What is the Average cost in each category?
select
category, AVG(cost) AS avg_costs
FROM gold.dim_products
GROUP BY category
ORDER BY avg_costs DESC

-- What is the total revenue generated for each category
select
p.category,
SUM(f.sales_amount) total_revenue
FROM gold.fact_sales f 
LEFT JOIN gold.dim_products p 
ON p.product_key = f.product_key
GROUP BY p.category
ORDER BY total_revenue DESC

-- What is total revenue generated by each customer?
SELECT
c.customer_key,
c.first_name,
c.last_name,
SUM(f.sales_amount) as total_revenue
FROM gold.fact_sales f 
LEFT JOIN gold.dim_customers c 
on c.customer_key = f.customer_key
GROUP BY
c.customer_key,
c.first_name,
c.last_name
ORDER BY total_revenue DESC

-- What is the distribution of sold items acrsoss countries?
SELECT
c.country,
SUM(f.quantity) as total_sold_items
FROM gold.fact_sales f 
LEFT JOIN gold.dim_customers c 
on c.customer_key = f.customer_key
GROUP BY
c.country
ORDER BY total_sold_items DESC

-- RANKING ANALYSIS --

-- Which 5 product generate the highest revenue?
select TOP 5
p.product_name,
SUM(f.sales_amount) total_revenue
FROM gold.fact_sales f 
LEFT JOIN gold.dim_products p 
ON p.product_key = f.product_key
GROUP BY p.product_name
ORDER BY total_revenue DESC

-- Using Windows Function & Row Number
SELECT *
FROM (
    select 
    p.product_name,
    SUM(f.sales_amount) total_revenue,
    ROW_NUMBER() OVER (ORDER BY SUM(f.sales_amount) DESC) As rank_products
    FROM gold.fact_sales f 
    LEFT JOIN gold.dim_products p 
    ON p.product_key = f.product_key
    GROUP BY p.product_name)t 
WHERE rank_products <=5

-- What are the 5 worst-performing products in terms of sales?
select TOP 5
p.product_name,
SUM(f.sales_amount) total_revenue
FROM gold.fact_sales f 
LEFT JOIN gold.dim_products p 
ON p.product_key = f.product_key
GROUP BY p.product_name
ORDER BY total_revenue

-- Which are the top 5 sub_category?
select TOP 5
p.subcategory,
SUM(f.sales_amount) total_revenue
FROM gold.fact_sales f 
LEFT JOIN gold.dim_products p 
ON p.product_key = f.product_key
GROUP BY p.subcategory
ORDER BY total_revenue DESC

-- Find the top 10 customers who have generated the highest revenue
SELECT TOP 10
c.customer_key,
c.first_name,
c.last_name,
SUM(f.sales_amount) as total_revenue
FROM gold.fact_sales f 
LEFT JOIN gold.dim_customers c 
on c.customer_key = f.customer_key
GROUP BY
c.customer_key,
c.first_name,
c.last_name
ORDER BY total_revenue DESC

-- Finf 3 customers with the fewest orders placed
SELECT TOP 3
c.customer_key,
c.first_name,
c.last_name,
COUNT(distinct order_number) AS total_orders
FROM gold.fact_sales f 
LEFT JOIN gold.dim_customers c 
on c.customer_key = f.customer_key
GROUP BY
c.customer_key,
c.first_name,
c.last_name
ORDER BY total_orders














